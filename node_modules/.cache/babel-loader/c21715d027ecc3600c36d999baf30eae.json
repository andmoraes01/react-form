{"ast":null,"code":"import React from'react';import{Formik}from'formik';import{ValidateField}from'../components/ValidateField';import*as yup from'yup';var AddCostumer=function AddCostumer(){var dataMinima=new Date();dataMinima.setFullYear(dataMinima.getFullYear()-18);var schema=yup.object({name:yup.string().required('Campo obrigatório. Favor informar o Nome.').min(10,'O nome deve conter no mínimo 10 caracteres.').max(30,'O nome deve conter no máximo 30 caracteres.'),email:yup.string().required('Campo obrigatório. Favor informar o Email.').email('O email é inválido !'),birth:yup.date().required('Campo obrigatório. Favor informar a Data de nascimento.').max(dataMinima,'Data inválida! É necessário possuir mais que 18 anos para se cadastrar.')});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Cadastro de Clientes\"),/*#__PURE__*/React.createElement(Formik,{initialValues:{name:'',email:'',birth:''},validationSchema:schema},function(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit,noValidade:true},/*#__PURE__*/React.createElement(ValidateField,{id:\"name\",name:\"name\",type:\"text\",label:\"Nome:\"}),/*#__PURE__*/React.createElement(ValidateField,{id:\"email\",name:\"email\",type:\"email\",label:\"Email:\"}),/*#__PURE__*/React.createElement(ValidateField,{id:\"birth\",name:\"birth\",type:\"date\",label:\"Data de nascimento:\"}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Adicionar\"));}));};export default AddCostumer;","map":{"version":3,"sources":["C:/Users/dti Digital/Desktop/React/react-form/src/components/AddCostumer.jsx"],"names":["React","Formik","ValidateField","yup","AddCostumer","dataMinima","Date","setFullYear","getFullYear","schema","object","name","string","required","min","max","email","birth","date","props","handleSubmit"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,aAAT,KAA8B,6BAA9B,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAExB,GAAMC,CAAAA,UAAU,CAAG,GAAIC,CAAAA,IAAJ,EAAnB,CACAD,UAAU,CAACE,WAAX,CAAuBF,UAAU,CAACG,WAAX,GAA2B,EAAlD,EAEA,GAAMC,CAAAA,MAAM,CAAGN,GAAG,CAACO,MAAJ,CAAW,CACxBC,IAAI,CAAER,GAAG,CAACS,MAAJ,GACHC,QADG,CACM,2CADN,EAEHC,GAFG,CAEC,EAFD,CAEK,6CAFL,EAGHC,GAHG,CAGC,EAHD,CAGK,6CAHL,CADkB,CAKxBC,KAAK,CAAEb,GAAG,CAACS,MAAJ,GACJC,QADI,CACK,4CADL,EAEJG,KAFI,CAEE,sBAFF,CALiB,CAQxBC,KAAK,CAAEd,GAAG,CAACe,IAAJ,GACJL,QADI,CACK,yDADL,EAEJE,GAFI,CAEAV,UAFA,CAEY,yEAFZ,CARiB,CAAX,CAAf,CAaA,mBACE,qDACE,qDADF,cAGE,oBAAC,MAAD,EACE,aAAa,CAAE,CAAEM,IAAI,CAAE,EAAR,CAAYK,KAAK,CAAE,EAAnB,CAAuBC,KAAK,CAAE,EAA9B,CADjB,CAEE,gBAAgB,CAAER,MAFpB,EAIG,SAACU,KAAD,qBACC,4BAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,CAAoC,UAAU,KAA9C,eACE,oBAAC,aAAD,EACE,EAAE,CAAC,MADL,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,MAHP,CAIE,KAAK,CAAC,OAJR,EADF,cAQE,oBAAC,aAAD,EACE,EAAE,CAAC,OADL,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,OAHP,CAIE,KAAK,CAAC,QAJR,EARF,cAeE,oBAAC,aAAD,EACE,EAAE,CAAC,OADL,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,MAHP,CAIE,KAAK,CAAC,qBAJR,EAfF,cAsBE,8BAAQ,IAAI,CAAC,QAAb,cAtBF,CADD,EAJH,CAHF,CADF,CAsCD,CAxDD,CA0DA,cAAehB,CAAAA,WAAf","sourcesContent":["import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport { ValidateField } from '../components/ValidateField'\r\nimport * as yup from 'yup';\r\n\r\nconst AddCostumer = () => {\r\n\r\n  const dataMinima = new Date();\r\n  dataMinima.setFullYear(dataMinima.getFullYear() - 18);\r\n\r\n  const schema = yup.object({\r\n    name: yup.string()\r\n      .required('Campo obrigatório. Favor informar o Nome.')\r\n      .min(10, 'O nome deve conter no mínimo 10 caracteres.')\r\n      .max(30, 'O nome deve conter no máximo 30 caracteres.'),\r\n    email: yup.string()\r\n      .required('Campo obrigatório. Favor informar o Email.')\r\n      .email('O email é inválido !'),\r\n    birth: yup.date()\r\n      .required('Campo obrigatório. Favor informar a Data de nascimento.')\r\n      .max(dataMinima, 'Data inválida! É necessário possuir mais que 18 anos para se cadastrar.')\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h1>Cadastro de Clientes</h1>\r\n\r\n      <Formik\r\n        initialValues={{ name: '', email: '', birth: '' }}\r\n        validationSchema={schema}\r\n      >\r\n        {(props) => (\r\n          <form onSubmit={props.handleSubmit} noValidade>\r\n            <ValidateField\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              label=\"Nome:\"\r\n            />\r\n\r\n            <ValidateField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email:\"\r\n            />\r\n\r\n            <ValidateField\r\n              id=\"birth\"\r\n              name=\"birth\"\r\n              type=\"date\"\r\n              label=\"Data de nascimento:\"\r\n            />\r\n\r\n            <button type=\"submit\">Adicionar</button>\r\n\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCostumer;\r\n"]},"metadata":{},"sourceType":"module"}