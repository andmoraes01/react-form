{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dti Digital\\\\Desktop\\\\React\\\\react-form\\\\src\\\\components\\\\AddCostumer.jsx\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { ValidateField } from '../components/ValidateField';\n\nconst AddCostumer = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Cadastro de Clientes\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      birth: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.name) {\n        errors.name = \"Campo obrigatório. Favor informar o Nome.\";\n      }\n\n      if (!values.email) {\n        errors.email = \"Campo obrigatório. Favor informar o Email.\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = \"O email é inválido !\";\n      }\n\n      if (!values.birth) {\n        errors.birth = \"Campo obrigatório. Favor informar a Data de nascimento.\";\n      }\n\n      return errors;\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    noValidade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ValidateField, {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    label: \"Nome:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ValidateField, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    label: \"Email:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ValidateField, {\n    id: \"birth\",\n    name: \"birth\",\n    type: \"date\",\n    label: \"Data de nascimento:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Adicionar\"))));\n};\n\nexport default AddCostumer;","map":{"version":3,"sources":["C:/Users/dti Digital/Desktop/React/react-form/src/components/AddCostumer.jsx"],"names":["React","Formik","ValidateField","AddCostumer","name","email","birth","values","errors","test","alert","JSON","stringify","props","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAGE,oBAAC,MAAD;AACE,IAAA,aAAa,EACX;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE,EAAnB;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KAFJ;AAIE,IAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB,YAAMC,MAAM,GAAG,EAAf;;AACA,UAAI,CAACD,MAAM,CAACH,IAAZ,EAAkB;AAChBI,QAAAA,MAAM,CAACJ,IAAP,GAAc,2CAAd;AACD;;AACD,UAAI,CAACG,MAAM,CAACF,KAAZ,EAAmB;AACjBG,QAAAA,MAAM,CAACH,KAAP,GAAe,4CAAf;AAED,OAHD,MAGO,IAAI,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CAAL,EAAoE;AACzEG,QAAAA,MAAM,CAACH,KAAP,GAAe,sBAAf;AACD;;AACD,UAAI,CAACE,MAAM,CAACD,KAAZ,EAAmB;AACjBE,QAAAA,MAAM,CAACF,KAAP,GAAe,yDAAf;AACD;;AACD,aAAOE,MAAP;AACD,KAnBH;AAoBE,IAAA,QAAQ,EAAGD,MAAD,IAAY;AACpBG,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAD,CAAL;AACD,KAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBIM,KAAD,iBACC;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAoC,IAAA,UAAU,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAeE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,qBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAsBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtBF,CAzBJ,CAHF,CADF;AA0DD,CA3DD;;AA6DA,eAAeX,WAAf","sourcesContent":["import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport { ValidateField } from '../components/ValidateField'\r\n\r\nconst AddCostumer = () => {\r\n  return (\r\n    <>\r\n      <h1>Cadastro de Clientes</h1>\r\n\r\n      <Formik\r\n        initialValues={\r\n          { name: '', email: '', birth: '' }\r\n        }\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.name) {\r\n            errors.name = \"Campo obrigatório. Favor informar o Nome.\"\r\n          }\r\n          if (!values.email) {\r\n            errors.email = \"Campo obrigatório. Favor informar o Email.\"\r\n\r\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n            errors.email = \"O email é inválido !\"\r\n          }\r\n          if (!values.birth) {\r\n            errors.birth = \"Campo obrigatório. Favor informar a Data de nascimento.\"\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values) => {\r\n          alert(JSON.stringify(values));\r\n        }}\r\n      >\r\n        {(props) => (\r\n          <form onSubmit={props.handleSubmit} noValidade>\r\n            <ValidateField\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              label=\"Nome:\"\r\n            />\r\n\r\n            <ValidateField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email:\"\r\n            />\r\n\r\n            <ValidateField\r\n              id=\"birth\"\r\n              name=\"birth\"\r\n              type=\"date\"\r\n              label=\"Data de nascimento:\"\r\n            />\r\n\r\n            <button type=\"submit\">Adicionar</button>\r\n\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCostumer;\r\n"]},"metadata":{},"sourceType":"module"}