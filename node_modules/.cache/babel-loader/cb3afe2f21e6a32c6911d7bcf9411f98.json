{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dti Digital\\\\Desktop\\\\React\\\\react-form\\\\src\\\\components\\\\AddCostumer.jsx\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { ValidateField } from '../components/ValidateField';\nimport * as yup from 'yup';\n\nconst AddCostumer = () => {\n  const schema = yup.object({\n    name: yup.string().required('Campo obrigatório. Favor informar o Nome.').min(10, 'O nome deve conter no mínimo 10 caracteres.').max(30, 'O nome deve conter no máximo 30 caracteres.'),\n    email: yup.string().required('Campo obrigatório. Favor informar o Email.').email('O email é inválido !'),\n    birth: yup.date().required('Campo obrigatório. Favor informar a Data de nascimento.').max(new Date(), 'Não é possível selecionar uma data futura ! Escolha uma data anterior ao dia de hoje.').min(new Date().setFullYear(new Date().getFullYear() - 18))\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Cadastro de Clientes\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      birth: ''\n    },\n    validationSchema: schema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    noValidade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ValidateField, {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    label: \"Nome:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ValidateField, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    label: \"Email:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ValidateField, {\n    id: \"birth\",\n    name: \"birth\",\n    type: \"date\",\n    label: \"Data de nascimento:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Adicionar\"))));\n};\n\nexport default AddCostumer;","map":{"version":3,"sources":["C:/Users/dti Digital/Desktop/React/react-form/src/components/AddCostumer.jsx"],"names":["React","Formik","ValidateField","yup","AddCostumer","schema","object","name","string","required","min","max","email","birth","date","Date","setFullYear","getFullYear","props","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAExB,QAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAW;AACxBC,IAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GACHC,QADG,CACM,2CADN,EAEHC,GAFG,CAEC,EAFD,EAEK,6CAFL,EAGHC,GAHG,CAGC,EAHD,EAGK,6CAHL,CADkB;AAKxBC,IAAAA,KAAK,EAAET,GAAG,CAACK,MAAJ,GACJC,QADI,CACK,4CADL,EAEJG,KAFI,CAEE,sBAFF,CALiB;AAQxBC,IAAAA,KAAK,EAAEV,GAAG,CAACW,IAAJ,GACJL,QADI,CACK,yDADL,EAEJE,GAFI,CAEA,IAAII,IAAJ,EAFA,EAEY,uFAFZ,EAGJL,GAHI,CAGA,IAAIK,IAAJ,GAAWC,WAAX,CAAuB,IAAID,IAAJ,GAAWE,WAAX,KAAyB,EAAhD,CAHA;AARiB,GAAX,CAAf;AAcA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAGE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEV,MAAAA,IAAI,EAAE,EAAR;AAAYK,MAAAA,KAAK,EAAE,EAAnB;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KADjB;AAEE,IAAA,gBAAgB,EAAER,MAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIa,KAAD,iBACC;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAoC,IAAA,UAAU,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAeE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,qBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAsBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtBF,CALJ,CAHF,CADF;AAsCD,CAtDD;;AAwDA,eAAef,WAAf","sourcesContent":["import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport { ValidateField } from '../components/ValidateField'\r\nimport * as yup from 'yup';\r\n\r\nconst AddCostumer = () => {\r\n\r\n  const schema = yup.object({\r\n    name: yup.string()\r\n      .required('Campo obrigatório. Favor informar o Nome.')\r\n      .min(10, 'O nome deve conter no mínimo 10 caracteres.')\r\n      .max(30, 'O nome deve conter no máximo 30 caracteres.'),\r\n    email: yup.string()\r\n      .required('Campo obrigatório. Favor informar o Email.')\r\n      .email('O email é inválido !'),\r\n    birth: yup.date()\r\n      .required('Campo obrigatório. Favor informar a Data de nascimento.')\r\n      .max(new Date(), 'Não é possível selecionar uma data futura ! Escolha uma data anterior ao dia de hoje.')\r\n      .min(new Date().setFullYear(new Date().getFullYear()-18))\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h1>Cadastro de Clientes</h1>\r\n\r\n      <Formik\r\n        initialValues={{ name: '', email: '', birth: '' }}\r\n        validationSchema={schema}\r\n      >\r\n        {(props) => (\r\n          <form onSubmit={props.handleSubmit} noValidade>\r\n            <ValidateField\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              label=\"Nome:\"\r\n            />\r\n\r\n            <ValidateField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email:\"\r\n            />\r\n\r\n            <ValidateField\r\n              id=\"birth\"\r\n              name=\"birth\"\r\n              type=\"date\"\r\n              label=\"Data de nascimento:\"\r\n            />\r\n\r\n            <button type=\"submit\">Adicionar</button>\r\n\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCostumer;\r\n"]},"metadata":{},"sourceType":"module"}