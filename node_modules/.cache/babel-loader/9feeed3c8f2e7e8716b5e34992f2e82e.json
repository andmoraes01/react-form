{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dti Digital\\\\Desktop\\\\React\\\\react-form\\\\src\\\\components\\\\AddCostumer.jsx\";\nimport React from 'react';\nimport { Formik, Field } from 'formik';\nimport { ValidateField } from '../components/ValidateField';\n\nconst AddCostumer = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Cadastro de Clientes\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      birth: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.name) {\n        errors.name = \"Campo obrigatório. Favor informar o Nome.\";\n      }\n\n      if (!values.email) {\n        errors.email = \"Campo obrigatório. Favor informar o Email.\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = \"O email é inválido !\";\n      }\n\n      if (!values.birth) {\n        errors.birth = \"Campo obrigatório. Favor informar a Data de nascimento.\";\n      }\n\n      return errors;\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    noValidade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Nome\"), /*#__PURE__*/React.createElement(Field, {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    className: props.errors.name && props.touched.name ? 'is-invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  })), props.errors.name && props.touched.name ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  }, props.errors.name) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    className: props.errors.email && props.touched.email ? 'is-invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })), props.errors.email && props.touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }\n  }, props.errors.email) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"birth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Data de Nascimento\"), /*#__PURE__*/React.createElement(Field, {\n    id: \"birth\",\n    name: \"birth\",\n    type: \"date\",\n    className: props.errors.birth && props.touched.birth ? 'is-invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }), props.errors.birth && props.touched.birth ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 18\n    }\n  }, props.errors.birth) : null), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Adicionar\"))));\n};\n\nexport default AddCostumer;","map":{"version":3,"sources":["C:/Users/dti Digital/Desktop/React/react-form/src/components/AddCostumer.jsx"],"names":["React","Formik","Field","ValidateField","AddCostumer","name","email","birth","values","errors","test","alert","JSON","stringify","props","handleSubmit","touched"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik, Field } from 'formik';\r\nimport {ValidateField} from '../components/ValidateField'\r\n\r\nconst AddCostumer = () => {\r\n  return (\r\n    <>\r\n      <h1>Cadastro de Clientes</h1>\r\n\r\n      <Formik\r\n        initialValues={\r\n          { name: '', email: '', birth: '' }\r\n        }\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.name) {\r\n            errors.name = \"Campo obrigatório. Favor informar o Nome.\"\r\n          }\r\n          if (!values.email) {\r\n            errors.email = \"Campo obrigatório. Favor informar o Email.\"\r\n\r\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n            errors.email = \"O email é inválido !\"\r\n          }\r\n          if (!values.birth) {\r\n            errors.birth = \"Campo obrigatório. Favor informar a Data de nascimento.\"\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values) => {\r\n          alert(JSON.stringify(values));\r\n        }}\r\n      >\r\n        {(props) => (\r\n          <form\r\n            onSubmit={props.handleSubmit}\r\n            noValidade\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Nome</label>\r\n              <Field\r\n                id=\"name\"\r\n                name=\"name\"\r\n                type=\"text\"               \r\n                className={props.errors.name && props.touched.name ? 'is-invalid' : ''}\r\n              />\r\n            </div>\r\n            {props.errors.name && props.touched.name ?\r\n              (<div className='invalid-feedback'>\r\n                {props.errors.name}\r\n              </div>)\r\n              : null\r\n            }\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Field\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"               \r\n                className={props.errors.email && props.touched.email ? 'is-invalid' : ''}\r\n              />\r\n            </div>\r\n            {props.errors.email && props.touched.email ?\r\n              (<div className='invalid-feedback' >\r\n                {props.errors.email}\r\n              </div>)\r\n              : null}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"birth\">Data de Nascimento</label>\r\n              <Field\r\n                id=\"birth\"\r\n                name=\"birth\"\r\n                type=\"date\"\r\n                className={props.errors.birth && props.touched.birth ? 'is-invalid' : ''}\r\n              />\r\n              {props.errors.birth && props.touched.birth ?\r\n                (<div className='invalid-feedback'>\r\n                  {props.errors.birth}\r\n                </div>)\r\n                : null}\r\n            </div>\r\n            <button type=\"submit\">Adicionar</button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCostumer;\r\n"]},"metadata":{},"sourceType":"module"}